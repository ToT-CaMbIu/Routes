@using Routes.Models;
@using Newtonsoft.Json;
@model Tuple<Route, List<List<string>>>
@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Route</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Item1.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Item1.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Item1.RouteUserId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Item1.RouteUserId)
        </dd>
    </dl>
</div>


<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Google Maps Multiple Markers</title>
    <script src="https://maps.googleapis.com/maps/api/js?"></script>
</head>
<body>
    <div id="map" style="width: 500px; height: 400px;"></div>

    <script type="text/javascript">
        var locations = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(@Model.Item2))')

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: new google.maps.LatLng(parseFloat(locations[0][0]), parseFloat(locations[0][1])),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var infowindow = new google.maps.InfoWindow();

        var marker, i;

        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(parseFloat(locations[i][0]), parseFloat(locations[i][1])),
                map: map
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent(locations[i][2]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }
    </script>
</body>
</html>