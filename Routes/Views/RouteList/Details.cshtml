@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Routes.Models;
@using Newtonsoft.Json;
@model Tuple<Tuple<Route, List<Comment>>, List<List<string>>>
@{
    ViewData["Title"] = "Details";
}

<h2>@Localizer["Details"]</h2>

<input hidden value="@Model.Item1.Item1.Id" name="id" id="id">

<div>
    <h4>@Localizer["Route"]</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Localizer["Name"]
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Item1.Item1.Name)
        </dd>
        <dt>
            @Localizer["UserName"]
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Item1.Item1.UserName)
        </dd>
    </dl>
</div>


<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Google Maps Multiple Markers</title>
    <script src="https://maps.googleapis.com/maps/api/js?"></script>
</head>
<body>
    <div id="map" style="width: 500px; height: 400px;"></div>

    <script type="text/javascript">
        var locations = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(@Model.Item2))')

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 4,
            center: new google.maps.LatLng(parseFloat(locations[0][0]), parseFloat(locations[0][1])),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var infowindow = new google.maps.InfoWindow();

        var marker, i;

        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(parseFloat(locations[i][0]), parseFloat(locations[i][1])),
                map: map
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent(locations[i][2]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }
    </script>
</body>
</html>


<form asp-action="Details" method="post">
    <p><h5>@Localizer["Opinion"]</h5></p>
    <p><textarea style="width: 500px; height: 100px;" name="NewComment" id="NewComment"></textarea></p>
    <div class="form-group">
        <input type="submit" value=@Localizer["Leave"] class="btn btn-default" id="sendButton" />
    </div>
</form>

<div>
    <h4>@Localizer["Comments"]</h4>
    <hr />
    @foreach (var commentary in Model.Item1.Item2)
    {
        <div id="commentdiv">
            <div class="card text">
                <div class="card-header">
                    <b>@commentary.UserName</b>
                </div>
                <div class="card-body">
                    <a>@commentary.Content</a>
                </div>
                @if (ViewContext.HttpContext.User.IsInRole("Admin") || ViewContext.HttpContext.User.IsInRole("Moderator"))
                {
                    <a asp-action="DeleteComment" asp-route-id="@commentary.Id" method="post">@Localizer["Delete"]</a>
                }
            </div>
            <hr />
        </div>
    }
</div>