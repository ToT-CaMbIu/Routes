// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Routes.Models;

namespace Routes.Migrations
{
    [DbContext(typeof(RouteContext))]
    partial class RouteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Routes.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int?>("CreatorId");

                    b.Property<int?>("RouteId");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("RouteId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Routes.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InfoAbout");

                    b.Property<double>("Lg");

                    b.Property<double>("Lt");

                    b.Property<int?>("RouteId");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("Routes.Models.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommentId");

                    b.Property<string>("Content");

                    b.Property<int?>("CreatorId");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("Routes.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatorId");

                    b.Property<double>("Rating");

                    b.Property<bool>("isForPremium");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Routes.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("InfoAbout");

                    b.Property<string>("Nickname");

                    b.Property<double>("Rating");

                    b.Property<string>("Role");

                    b.Property<int?>("RouteId");

                    b.Property<bool>("isPremium");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Routes.Models.Comment", b =>
                {
                    b.HasOne("Routes.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Routes.Models.Route")
                        .WithMany("Comments")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Routes.Models.Place", b =>
                {
                    b.HasOne("Routes.Models.Route")
                        .WithMany("Places")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Routes.Models.Reply", b =>
                {
                    b.HasOne("Routes.Models.Comment")
                        .WithMany("Replies")
                        .HasForeignKey("CommentId");

                    b.HasOne("Routes.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("Routes.Models.Route", b =>
                {
                    b.HasOne("Routes.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("Routes.Models.User", b =>
                {
                    b.HasOne("Routes.Models.Route")
                        .WithMany("Evaluators")
                        .HasForeignKey("RouteId");
                });
#pragma warning restore 612, 618
        }
    }
}
